---
- name: Create VMs if they don't already exist
  hosts: proxmox_vms
  serial: 1
  gather_facts: no # this will fail if the VMs don't exist yet
  vars:
    virt_host_ip: "{{ hostvars[virt_host]['ansible_host'] }}"
    not_single_quote: "[^']+" # define here to avoid issues with single quote escapes 
  tasks:
  - name: Create new VM
    proxmox_kvm:
      # api connectivity
      api_user: "{{ api_user }}"
      api_password: "{{ root_pw }}"
      api_host: "{{ virt_host_ip }}"
      node: "{{ virt_host }}"
      # hardware
      memory: "{{ ram }}"
      cores: "{{ vcpus }}"
      cpu: "{{ cpu_type }}"
      net:
        net0: "virtio,bridge={{ dmz_bridge }}"
      ide:
        ide2: 'local:cloudinit,format=qcow2'
      # cloud-init
      sshkeys: "{{ pub_key }}"
      cipassword: "{{ root_pw }}"
      ipconfig:
        ipconfig0: 'ip={{ ansible_host }}/24,gw={{ dmz_gw }}'
      # options
      name: "{{ inventory_hostname }}"
      proxmox_default_behavior: no_defaults
      scsihw: virtio-scsi-pci # SUPER IMPORTANT!
      ostype: l26
      onboot: yes
      agent: yes
      #state: absent
    delegate_to: localhost
    register: vm
  - name: Download cloud image # does not appear to re-download if client recently accessed (HTTP 304 Not Modified)
    get_url:
      url: "{{ img_url }}{{ img_file }}"
      dest: "~/{{ img_file }}"
    when: vm.changed
    delegate_to: "{{ virt_host }}"
  - name: Import template disk
    command:
      cmd: "qm importdisk {{ vm.vmid }} ~/{{ img_file }} {{ tgt_storage }}"
    when: vm.changed
    delegate_to: "{{ virt_host }}"
    register: disk
  - debug:
      # var: "disk.stdout_lines | last | regex_search(tgt_storage + '[^w]+')" #WORKS
      var: "disk.stdout_lines | last | regex_search(tgt_storage + not_single_quote)" #WORKS
      #var: "'Successfully imported disk as ''unused2:quad-ssd:103/vm-103-disk-3.raw''' | regex_search('(?<=Successfully imported disk as ).*')"
      # msg: "that's fun. it\\'s great"
      # msg: "a" + "b"
      # var: "'[^'']+' | regex_escape()"
      # var: not_single_quote
  - name: Attach template disk to SCSI controller
    command:
      cmd: "pvesh create /nodes/{{ virt_host }}/qemu/{{ vm.vmid }}/config --scsi0 {{ disk.stdout_lines | last | regex_search(tgt_storage + not_single_quote) }}"
    when: vm.changed
    delegate_to: "{{ virt_host }}"
  - name: Set disk as bootable
    command:
      cmd: "qm set {{ vm.vmid }} --boot order=scsi0"
    when: vm.changed
    delegate_to: "{{ virt_host }}"
