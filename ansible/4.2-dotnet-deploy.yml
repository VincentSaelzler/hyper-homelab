---

- name: Download Reposities and Save Build Output on Ansible Controller
  hosts: dotnet_apps
  vars:
    ansible_user: "{{ usr_name }}"
    repo_dir: "~/src/{{ inventory_hostname }}/"
    build_tgt: "/tmp/{{ inventory_hostname }}/"
    archive_file: "/tmp/{{ inventory_hostname }}.tgz"
  tasks:
    - name: Clone Private Repositories
      delegate_to: build
      git:
        repo: "{{ dotnet_repo }}"
        dest: "{{ repo_dir }}"
        force: yes
        key_file: "~/.ssh/{{ dotnet_repo_deploy_key }}" # required for private repos
        accept_newhostkey: yes # if the host key isn't trusted, module fails with misleading permissions errors
      when: dotnet_repo_deploy_key is defined

    - name: Clone Public Repositories
      delegate_to: build
      git:
        repo: "{{ dotnet_repo }}"
        dest: "{{ repo_dir }}"
        force: yes
      when: dotnet_repo_deploy_key is not defined
  
    - name: Create and Save Build Artifacts
      delegate_to: build
      command: "dotnet publish -c Release -o {{ build_tgt }}"
      args:
        chdir: "{{ repo_dir }}{{dotnet_build_subdir}}"

    - name: Compress Published Output Directory
      delegate_to: build
      archive:
        path: "{{ build_tgt }}"
        dest: "{{ archive_file }}"

    - name: Fetch File and Save on Control Node
      delegate_to: build
      fetch:
        src: "{{ archive_file }}"
        dest: "{{ archive_file }}"
        flat: yes

    - name: Retreive Archive from Controller Node and Unpack
      unarchive:
        src: "{{ archive_file }}"
        dest: "{{ app_directory }}"

- name: Create Service File and Start Service
  hosts: dotnet_apps
  tasks:
    - name: Copy the Service File
      template:
        src: dotnetapp.service
        dest: /etc/systemd/system/dotnetapp.service

    - name: Restart App Service
      systemd:
        name: dotnetapp
        state: restarted
        enabled: yes
