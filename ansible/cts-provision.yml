---
- name: Create VMs if they don't already exist
  hosts: proxmox_cts
  serial: 1
  gather_facts: no # this will fail if the VMs don't exist yet
  vars:
    virt_host_ip: "{{ hostvars[virt_host]['ansible_host'] }}"
    #not_single_quote: "[^']+" # define here to avoid issues with single quote escapes 
  tasks:

  - name: Check for latest OS template
    shell:
      cmd: "pveam available --section system | grep -o debian.* | sort -r | sed 1q"
    register: template
    delegate_to: "{{ virt_host }}"
    changed_when: false
  - name: Download latest OS template #always shows as changed, but pveam is smart enough to not re-download.
    command:
      cmd: "pveam download local {{ template.stdout }}"
    delegate_to: "{{ virt_host }}"
  - name: show variables
    debug:
      msg: "{{ template.stdout }}"
  - name: Create new container
    proxmox:
      # api connectivity
      api_user: "{{ api_user }}"
      api_password: "{{ root_pw }}"
      api_host: "{{ virt_host_ip }}"
      node: "{{ virt_host }}"
      # hardware
      ostemplate: "local:vztmpl/{{ template.stdout }}"
      storage: "{{ tgt_storage }}"
      memory: "{{ ram }}"
      swap: 0
      cores: "{{ vcpus }}"
      netif: "{{ netconf }}"
      nameserver: "{{ dns_srvr }}"
      hostname: "{{ inventory_hostname }}"
  #     # options
      pubkey: "{{ pub_key }}"
      proxmox_default_behavior: no_defaults
      unprivileged: yes
      onboot: yes
      # state: started #apparently cannot create and start containers in one step
    delegate_to: localhost
  - name: Wait for a few seconds so the container will be recognized by name
    wait_for:
      timeout: 5
    delegate_to: localhost
  - name: Start the new container
    proxmox:
      # api connectivity
      api_user: "{{ api_user }}"
      api_password: "{{ root_pw }}"
      api_host: "{{ virt_host_ip }}"
      # start container
      hostname: "{{ inventory_hostname }}"
      state: started
    delegate_to: localhost
  #   register: vm
  # - name: Download cloud image # does not appear to re-download if client recently accessed (HTTP 304 Not Modified)
  #   get_url:
  #     url: "{{ img_url }}{{ img_file }}"
  #     dest: "~/{{ img_file }}"
  #   when: vm.changed
  #   delegate_to: "{{ virt_host }}"
  # - name: Import template disk
  #   command:
  #     cmd: "qm importdisk {{ vm.vmid }} ~/{{ img_file }} {{ tgt_storage }}"
  #   when: vm.changed
  #   delegate_to: "{{ virt_host }}"
  #   register: disk
  # - name: Attach template disk to SCSI controller
  #   command:
  #     cmd: "pvesh create /nodes/{{ virt_host }}/qemu/{{ vm.vmid }}/config --scsi0 {{ disk.stdout_lines | last | regex_search(tgt_storage + not_single_quote) }}"
  #   when: vm.changed
  #   delegate_to: "{{ virt_host }}"
  # - name: Resize template disk
  #   command:
  #     cmd: "qm resize {{ vm.vmid }} scsi0 +{{ addtl_space }}"
  #   when:
  #   - vm.changed
  #   - addtl_space is defined
  #   delegate_to: "{{ virt_host }}"
  # - name: Set disk as bootable
  #   command:
  #     cmd: "qm set {{ vm.vmid }} --boot order=scsi0"
  #   when: vm.changed
  #   delegate_to: "{{ virt_host }}"
  # - name: Start VM
  #   proxmox_kvm:
  #     # api connectivity
  #     api_user: "{{ api_user }}"
  #     api_password: "{{ root_pw }}"
  #     api_host: "{{ virt_host_ip }}"
  #     node: "{{ virt_host }}"
  #     # options
  #     name: "{{ inventory_hostname }}"
  #     state: started
  #   delegate_to: localhost
