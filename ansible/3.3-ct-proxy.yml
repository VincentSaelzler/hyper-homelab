---
- name: Bootstrap Host and Install HAProxy
  hosts: proxy
  handlers:
    - import_tasks: handlers/main.yml
  roles:
    - full-upgrade
    - personalize
    - rsyslog
  tasks:
    - name: Install apt packages
      apt:
        state: present
        pkg:
        - haproxy
        #- curl # for testing connections to localhost
    - name: Copy the Main Config File
      copy:
        src: haproxy.cfg
        dest: "/etc/haproxy/haproxy.cfg"
        #mode: "644"
        force: yes
        
    # this file gets installed during the apt package install
    # we do not want to perform any of the actions is specifies
    - name: Delete the Default HAProxy Rsyslog Config
      file:
        path: /etc/rsyslog.d/49-haproxy.conf
        state: absent

- name: Generate Let's Encrypt Certificates
  hosts: proxy
  vars:
    # running the app
    certbot_testmode: true
    certbot_install_method: package
    certbot_create_standalone_stop_services:
      - haproxy
    # creating certs
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_admin_email: "{{ usr_email }}"
    certbot_certs: "{{ certs }}"
    # renewing certs
    certbot_auto_renew: true
    certbot_auto_renew_hour: "4"
    certbot_auto_renew_minute: "20"
  roles:
    - geerlingguy.certbot

- name: Use Sym Links so Let's Encrypt certificates Match HAProxy Naming Convention
  hosts: proxy
  tasks:
    - name: Create container directory for certs
      file:
        path: /etc/haproxy/certs/
        state: directory
    - name: Create symbolic links for intermediate certificate chains
      file:
        src: "/etc/letsencrypt/live/{{ item }}/fullchain.pem"
        dest: "/etc/haproxy/certs/{{ item }}"
        state: link
      loop: "{{ domains }}"

    - name: Create symbolic links for private key files
      file:
        src: "/etc/letsencrypt/live/{{ item }}/privkey.pem"
        dest: "/etc/haproxy/certs/{{ item }}.key"
        state: link
      loop: "{{ domains }}"

# this needs to run AFTER the sym links have been created
- name: Restart Services to Apply Changes
  hosts: proxy
  tasks:
    - name: Restart haproxy service
      systemd:
        name: haproxy
        state: restarted
        enabled: yes
      register: systemctl
      retries: 10
      delay: 3
      until: not systemctl.failed # The certbot role (sometimes) prevents haproxy from restarting for a few seconds.
