---
- name: Network, apt repository, and UPS configuration
  hosts: proxmox_nodes
  roles:
  - bootstrap
  - send_logs
  tasks:
  #network
  - name: Check whether DMZ bridge configuration already exists.
    lineinfile:
      path: /etc/network/interfaces
      line: "iface {{ netenv.dmz.vbridge }} inet static"
      state: present
    check_mode: yes # do not add the line - just check whether it WOULD be added
    register: presence
  - name: Create DMZ bridge network (for VMs)
    command:
      cmd: "pvesh create /nodes/{{ inventory_hostname }}/network --iface {{ netenv.dmz.vbridge }} --type bridge --autostart true --cidr {{ dmz_cidr }} --bridge_ports {{ dmz_iface }}"
      #cmd: echo hi
    when:
    - presence.changed # this will NOT run an update - only adds the bridge config if it does not exist.
    - dmz_iface is defined # some nodes don't have a spare ethernet port (yet)
    notify:
    - restart
  #repositories
  - name: Comment out the enterprise repository
    replace:
      path: /etc/apt/sources.list.d/pve-enterprise.list
      regexp: '^deb'
      replace: '#deb'
  - name: Add the no-subscription repository
    lineinfile:
      path: /etc/apt/sources.list
      line: "deb http://download.proxmox.com/debian/pve {{ ansible_facts.distribution_release }} pve-no-subscription"
      state: present
  - name: Update cache and upgrade existing packages
    apt:
      upgrade: full
      cache_valid_time: 3600
    notify:
    - restart
  - name: Install UPS client
    apt:
      pkg:
      - nut-client
    notify:
    - restart
  - name: Change mode to netclient
    replace:
      path: /etc/nut/nut.conf
      regexp: '^MODE=.*'
      replace: 'MODE=netclient'
    notify:
    - restart
  - name: Add a monitor directive
    lineinfile:
      path: /etc/nut/upsmon.conf
      line: "MONITOR {{ ups_name }}@{{ ups_server }} 1 {{ ups_user }} {{ ups_pw }} slave"
      regexp: "^MONITOR"
      state: present
    notify:
    - restart
  handlers:
  - name: restart
    reboot:

# Cluster configuration
- name: Install dependencies and create the cluster
  hosts: proxmox_nodes
  tasks:
  - name: Install required apt packages
    apt:
      pkg: python3-pip
  - name: Install required python packages
    pip:
      name:
      - pexpect
      #- proxmoxer
  - name: Create the Cluster
    command:
      cmd: pvecm create cluster0
      creates: /etc/pve/corosync.conf
    when: ansible_hostname == cluster_starter
- name: Join the cluster one node at a time
  hosts: proxmox_nodes
  serial: 1
  vars:
  - cluster_ip: "{{ hostvars[cluster_starter]['ansible_host'] }}"
  tasks:
  - name: Join the cluster
    expect:
      command: "pvecm add {{ cluster_ip }}"
      creates: /etc/pve/corosync.conf
      timeout: 90
      responses:
        'Please enter superuser \(root\) password': "{{ root_pw }}"
        'Are you sure you want to continue connecting': "yes"
    when: ansible_hostname != cluster_starter

# host-specific stuff (disk partitioning and LVM/RAID)
- import_playbook: proxmox-pve2.yml
- import_playbook: proxmox-pve3.yml
- import_playbook: proxmox-pve4.yml
- import_playbook: proxmox-pve5.yml
