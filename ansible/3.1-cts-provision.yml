---
- name: Download Container Templates from Proxmox Repository
  hosts: proxmox_cts
  gather_facts: no # fact gathering will fail if the containers don't exist yet
  serial: 1
  tasks:

  - name: Check for Latest OS Template
    shell:
      cmd: "pveam available --section system | grep -o debian.* | sort -r | sed 1q"
    register: template_name
    delegate_to: "{{ virt_host }}"
    changed_when: false

  - name: Download Latest OS Template
    command:
      cmd: "pveam download local {{ template_name.stdout }}"
    delegate_to: "{{ virt_host }}"
    register: template_dl
    changed_when: template_dl.stdout_lines | last() != 'calculating checksum of existing file...OK, got correct file already, no need to download'


- name: Create and Start Containers
  hosts: proxmox_cts
  gather_facts: no # fact gathering will fail if the containers don't exist yet
  serial: 1
  vars:
    virt_host_ip: "{{ hostvars[virt_host]['ansible_host'] }}"
  tasks:

  - name: Create New Container
    proxmox:
      # api connectivity
      api_user: "{{ api_user }}"
      api_password: "{{ root_pw }}"
      api_host: "{{ virt_host_ip }}"
      node: "{{ virt_host }}"
      # hardware
      ostemplate: "local:vztmpl/{{ template_name.stdout }}"
      disk: "{{ disk_size }}"
      storage: "{{ tgt_storage }}"
      memory: "{{ ram }}"
      swap: 0
      cores: "{{ vcpus }}"
      netif: "{{ netconf }}"
      nameserver: "{{ dns_srvr }}"
      hostname: "{{ inventory_hostname }}"
      # options
      pubkey: "{{ pub_key }}"
      proxmox_default_behavior: no_defaults
      unprivileged: yes
      onboot: yes
      features:
        # really don't want to enable, however
        # required for ssh to function with good performance
        # https://forum.proxmox.com/threads/delay-to-log-in-ssh-session-after-upgrade-from-6-x-to-7-x.92755/
        - nesting=1 
      #state: started #apparently cannot create and start containers in one step
    delegate_to: localhost

  - name: Start the new container
    proxmox:
      # api connectivity
      api_user: "{{ api_user }}"
      api_password: "{{ root_pw }}"
      api_host: "{{ virt_host_ip }}"
      # start container
      hostname: "{{ inventory_hostname }}"
      state: started
    delegate_to: localhost
    register: proxmoxer
    retries: 10
    delay: 1
    until: not proxmoxer.failed # sometimes it takes a few seconds to recognize container by name
